// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: listener/lispb/listener.proto

package lispb

import (
	implantpb "github.com/chainreactors/malice-network/helper/proto/implant/implantpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ListenerId   string              `protobuf:"bytes,2,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	RegisterData *implantpb.Register `protobuf:"bytes,3,opt,name=register_data,json=registerData,proto3" json:"register_data,omitempty"`
	RemoteAddr   string              `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
}

func (x *RegisterSession) Reset() {
	*x = RegisterSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSession) ProtoMessage() {}

func (x *RegisterSession) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSession.ProtoReflect.Descriptor instead.
func (*RegisterSession) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterSession) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *RegisterSession) GetRegisterData() *implantpb.Register {
	if x != nil {
		return x.RegisterData
	}
	return nil
}

func (x *RegisterSession) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

type RegisterListener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host      string     `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Name      string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Addr      string     `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Pipelines *Pipelines `protobuf:"bytes,5,opt,name=pipelines,proto3" json:"pipelines,omitempty"`
}

func (x *RegisterListener) Reset() {
	*x = RegisterListener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterListener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterListener) ProtoMessage() {}

func (x *RegisterListener) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterListener.ProtoReflect.Descriptor instead.
func (*RegisterListener) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterListener) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterListener) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RegisterListener) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterListener) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RegisterListener) GetPipelines() *Pipelines {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

type SpiteSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string           `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	SessionId  string           `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TaskId     uint32           `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Spite      *implantpb.Spite `protobuf:"bytes,4,opt,name=spite,proto3" json:"spite,omitempty"`
}

func (x *SpiteSession) Reset() {
	*x = SpiteSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiteSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiteSession) ProtoMessage() {}

func (x *SpiteSession) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiteSession.ProtoReflect.Descriptor instead.
func (*SpiteSession) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{2}
}

func (x *SpiteSession) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *SpiteSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SpiteSession) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SpiteSession) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

type Pipelines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipelines []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
}

func (x *Pipelines) Reset() {
	*x = Pipelines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipelines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipelines) ProtoMessage() {}

func (x *Pipelines) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipelines.ProtoReflect.Descriptor instead.
func (*Pipelines) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{3}
}

func (x *Pipelines) GetPipelines() []*Pipeline {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*Pipeline_Tcp
	//	*Pipeline_Web
	Body       isPipeline_Body `protobuf_oneof:"body"`
	Tls        *TLS            `protobuf:"bytes,70,opt,name=tls,proto3" json:"tls,omitempty"`
	Encryption *Encryption     `protobuf:"bytes,80,opt,name=encryption,proto3" json:"encryption,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{4}
}

func (m *Pipeline) GetBody() isPipeline_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Pipeline) GetTcp() *TCPPipeline {
	if x, ok := x.GetBody().(*Pipeline_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (x *Pipeline) GetWeb() *Website {
	if x, ok := x.GetBody().(*Pipeline_Web); ok {
		return x.Web
	}
	return nil
}

func (x *Pipeline) GetTls() *TLS {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *Pipeline) GetEncryption() *Encryption {
	if x != nil {
		return x.Encryption
	}
	return nil
}

type isPipeline_Body interface {
	isPipeline_Body()
}

type Pipeline_Tcp struct {
	Tcp *TCPPipeline `protobuf:"bytes,10,opt,name=tcp,proto3,oneof"`
}

type Pipeline_Web struct {
	Web *Website `protobuf:"bytes,20,opt,name=web,proto3,oneof"`
}

func (*Pipeline_Tcp) isPipeline_Body() {}

func (*Pipeline_Web) isPipeline_Body() {}

type CtrlPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CtrlPipeline) Reset() {
	*x = CtrlPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtrlPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtrlPipeline) ProtoMessage() {}

func (x *CtrlPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtrlPipeline.ProtoReflect.Descriptor instead.
func (*CtrlPipeline) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{5}
}

func (x *CtrlPipeline) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *CtrlPipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TLS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert   string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Enable bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *TLS) Reset() {
	*x = TLS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS.ProtoReflect.Descriptor instead.
func (*TLS) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{6}
}

func (x *TLS) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *TLS) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TLS) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type Encryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Encryption) Reset() {
	*x = Encryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Encryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Encryption) ProtoMessage() {}

func (x *Encryption) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Encryption.ProtoReflect.Descriptor instead.
func (*Encryption) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{7}
}

func (x *Encryption) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Encryption) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Encryption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TCPPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Host       string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port       uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	ListenerId string `protobuf:"bytes,4,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Enable     bool   `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *TCPPipeline) Reset() {
	*x = TCPPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPPipeline) ProtoMessage() {}

func (x *TCPPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPPipeline.ProtoReflect.Descriptor instead.
func (*TCPPipeline) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{8}
}

func (x *TCPPipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TCPPipeline) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TCPPipeline) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TCPPipeline) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *TCPPipeline) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type WebContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	WebsiteID   string `protobuf:"bytes,2,opt,name=WebsiteID,proto3" json:"WebsiteID,omitempty"`
	Path        string `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	ContentType string `protobuf:"bytes,4,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Size        uint64 `protobuf:"varint,5,opt,name=Size,proto3" json:"Size,omitempty"`
	Content     []byte `protobuf:"bytes,9,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *WebContent) Reset() {
	*x = WebContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebContent) ProtoMessage() {}

func (x *WebContent) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebContent.ProtoReflect.Descriptor instead.
func (*WebContent) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{9}
}

func (x *WebContent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *WebContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebContent) GetWebsiteID() string {
	if x != nil {
		return x.WebsiteID
	}
	return ""
}

func (x *WebContent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebContent) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *WebContent) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WebContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type WebsiteAddContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Contents map[string]*WebContent `protobuf:"bytes,2,rep,name=Contents,proto3" json:"Contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WebsiteAddContent) Reset() {
	*x = WebsiteAddContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteAddContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteAddContent) ProtoMessage() {}

func (x *WebsiteAddContent) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteAddContent.ProtoReflect.Descriptor instead.
func (*WebsiteAddContent) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{10}
}

func (x *WebsiteAddContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebsiteAddContent) GetContents() map[string]*WebContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type WebsiteRemoveContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Paths []string `protobuf:"bytes,2,rep,name=Paths,proto3" json:"Paths,omitempty"`
}

func (x *WebsiteRemoveContent) Reset() {
	*x = WebsiteRemoveContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteRemoveContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteRemoveContent) ProtoMessage() {}

func (x *WebsiteRemoveContent) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteRemoveContent.ProtoReflect.Descriptor instead.
func (*WebsiteRemoveContent) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{11}
}

func (x *WebsiteRemoveContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebsiteRemoveContent) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Website struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Port       uint32                 `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	RootPath   string                 `protobuf:"bytes,4,opt,name=RootPath,proto3" json:"RootPath,omitempty"`
	ListenerId string                 `protobuf:"bytes,5,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Contents   map[string]*WebContent `protobuf:"bytes,6,rep,name=Contents,proto3" json:"Contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Enable     bool                   `protobuf:"varint,7,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *Website) Reset() {
	*x = Website{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Website) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Website) ProtoMessage() {}

func (x *Website) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Website.ProtoReflect.Descriptor instead.
func (*Website) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{12}
}

func (x *Website) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Website) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Website) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Website) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *Website) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *Website) GetContents() map[string]*WebContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Website) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type WebsiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *WebsiteResponse) Reset() {
	*x = WebsiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteResponse) ProtoMessage() {}

func (x *WebsiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteResponse.ProtoReflect.Descriptor instead.
func (*WebsiteResponse) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{13}
}

func (x *WebsiteResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Websites struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Websites []*Website `protobuf:"bytes,1,rep,name=Websites,proto3" json:"Websites,omitempty"`
}

func (x *Websites) Reset() {
	*x = Websites{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Websites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Websites) ProtoMessage() {}

func (x *Websites) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Websites.ProtoReflect.Descriptor instead.
func (*Websites) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{14}
}

func (x *Websites) GetWebsites() []*Website {
	if x != nil {
		return x.Websites
	}
	return nil
}

type ListenerName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ListenerName) Reset() {
	*x = ListenerName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerName) ProtoMessage() {}

func (x *ListenerName) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerName.ProtoReflect.Descriptor instead.
func (*ListenerName) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{15}
}

func (x *ListenerName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WebsiteAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	WebName  string `protobuf:"bytes,3,opt,name=WebName,proto3" json:"WebName,omitempty"`
}

func (x *WebsiteAsset) Reset() {
	*x = WebsiteAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteAsset) ProtoMessage() {}

func (x *WebsiteAsset) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteAsset.ProtoReflect.Descriptor instead.
func (*WebsiteAsset) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{16}
}

func (x *WebsiteAsset) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *WebsiteAsset) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WebsiteAsset) GetWebName() string {
	if x != nil {
		return x.WebName
	}
	return ""
}

type WebsiteAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*WebsiteAsset `protobuf:"bytes,1,rep,name=Assets,proto3" json:"Assets,omitempty"`
}

func (x *WebsiteAssets) Reset() {
	*x = WebsiteAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_lispb_listener_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteAssets) ProtoMessage() {}

func (x *WebsiteAssets) ProtoReflect() protoreflect.Message {
	mi := &file_listener_lispb_listener_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteAssets.ProtoReflect.Descriptor instead.
func (*WebsiteAssets) Descriptor() ([]byte, []int) {
	return file_listener_lispb_listener_proto_rawDescGZIP(), []int{17}
}

func (x *WebsiteAssets) GetAssets() []*WebsiteAsset {
	if x != nil {
		return x.Assets
	}
	return nil
}

var File_listener_lispb_listener_proto protoreflect.FileDescriptor

var file_listener_lispb_listener_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x70, 0x62,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x1a, 0x1f, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x2f,
	0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x73,
	0x70, 0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x09, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x69, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x69,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x69, 0x73, 0x70,
	0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x09, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x43, 0x50, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x77, 0x65,
	0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x03, 0x77, 0x65, 0x62, 0x12, 0x1c,
	0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69,
	0x73, 0x70, 0x62, 0x2e, 0x54, 0x4c, 0x53, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x0a,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x43, 0x0a, 0x0c, 0x43, 0x74, 0x72, 0x6c, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x03,
	0x54, 0x4c, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x4a, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x82, 0x01,
	0x0a, 0x0b, 0x54, 0x43, 0x50, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x11,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69,
	0x73, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a, 0x14, 0x57, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x07,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x4e,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x21,
	0x0a, 0x0f, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x36, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x08, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52,
	0x08, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a,
	0x0c, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a,
	0x0d, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x69, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x45, 0x5a, 0x43, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_listener_lispb_listener_proto_rawDescOnce sync.Once
	file_listener_lispb_listener_proto_rawDescData = file_listener_lispb_listener_proto_rawDesc
)

func file_listener_lispb_listener_proto_rawDescGZIP() []byte {
	file_listener_lispb_listener_proto_rawDescOnce.Do(func() {
		file_listener_lispb_listener_proto_rawDescData = protoimpl.X.CompressGZIP(file_listener_lispb_listener_proto_rawDescData)
	})
	return file_listener_lispb_listener_proto_rawDescData
}

var file_listener_lispb_listener_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_listener_lispb_listener_proto_goTypes = []interface{}{
	(*RegisterSession)(nil),      // 0: lispb.RegisterSession
	(*RegisterListener)(nil),     // 1: lispb.RegisterListener
	(*SpiteSession)(nil),         // 2: lispb.SpiteSession
	(*Pipelines)(nil),            // 3: lispb.Pipelines
	(*Pipeline)(nil),             // 4: lispb.Pipeline
	(*CtrlPipeline)(nil),         // 5: lispb.CtrlPipeline
	(*TLS)(nil),                  // 6: lispb.TLS
	(*Encryption)(nil),           // 7: lispb.Encryption
	(*TCPPipeline)(nil),          // 8: lispb.TCPPipeline
	(*WebContent)(nil),           // 9: lispb.WebContent
	(*WebsiteAddContent)(nil),    // 10: lispb.WebsiteAddContent
	(*WebsiteRemoveContent)(nil), // 11: lispb.WebsiteRemoveContent
	(*Website)(nil),              // 12: lispb.Website
	(*WebsiteResponse)(nil),      // 13: lispb.WebsiteResponse
	(*Websites)(nil),             // 14: lispb.Websites
	(*ListenerName)(nil),         // 15: lispb.ListenerName
	(*WebsiteAsset)(nil),         // 16: lispb.WebsiteAsset
	(*WebsiteAssets)(nil),        // 17: lispb.WebsiteAssets
	nil,                          // 18: lispb.WebsiteAddContent.ContentsEntry
	nil,                          // 19: lispb.Website.ContentsEntry
	(*implantpb.Register)(nil),   // 20: implantpb.Register
	(*implantpb.Spite)(nil),      // 21: implantpb.Spite
}
var file_listener_lispb_listener_proto_depIdxs = []int32{
	20, // 0: lispb.RegisterSession.register_data:type_name -> implantpb.Register
	3,  // 1: lispb.RegisterListener.pipelines:type_name -> lispb.Pipelines
	21, // 2: lispb.SpiteSession.spite:type_name -> implantpb.Spite
	4,  // 3: lispb.Pipelines.pipelines:type_name -> lispb.Pipeline
	8,  // 4: lispb.Pipeline.tcp:type_name -> lispb.TCPPipeline
	12, // 5: lispb.Pipeline.web:type_name -> lispb.Website
	6,  // 6: lispb.Pipeline.tls:type_name -> lispb.TLS
	7,  // 7: lispb.Pipeline.encryption:type_name -> lispb.Encryption
	18, // 8: lispb.WebsiteAddContent.Contents:type_name -> lispb.WebsiteAddContent.ContentsEntry
	19, // 9: lispb.Website.Contents:type_name -> lispb.Website.ContentsEntry
	12, // 10: lispb.Websites.Websites:type_name -> lispb.Website
	16, // 11: lispb.WebsiteAssets.Assets:type_name -> lispb.WebsiteAsset
	9,  // 12: lispb.WebsiteAddContent.ContentsEntry.value:type_name -> lispb.WebContent
	9,  // 13: lispb.Website.ContentsEntry.value:type_name -> lispb.WebContent
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_listener_lispb_listener_proto_init() }
func file_listener_lispb_listener_proto_init() {
	if File_listener_lispb_listener_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_listener_lispb_listener_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterListener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiteSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipelines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtrlPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Encryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteAddContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteRemoveContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Website); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Websites); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_lispb_listener_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_listener_lispb_listener_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Pipeline_Tcp)(nil),
		(*Pipeline_Web)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_listener_lispb_listener_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_listener_lispb_listener_proto_goTypes,
		DependencyIndexes: file_listener_lispb_listener_proto_depIdxs,
		MessageInfos:      file_listener_lispb_listener_proto_msgTypes,
	}.Build()
	File_listener_lispb_listener_proto = out.File
	file_listener_lispb_listener_proto_rawDesc = nil
	file_listener_lispb_listener_proto_goTypes = nil
	file_listener_lispb_listener_proto_depIdxs = nil
}
