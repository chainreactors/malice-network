// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: client/clientpb/client.proto

package clientpb

import (
	implantpb "github.com/chainreactors/malice-network/helper/proto/implant/implantpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{0}
}

type Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major      int32  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor      int32  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch      int32  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Commit     string `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	Dirty      bool   `protobuf:"varint,5,opt,name=dirty,proto3" json:"dirty,omitempty"`
	CompiledAt int64  `protobuf:"varint,6,opt,name=compiledAt,proto3" json:"compiledAt,omitempty"`
	Os         string `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	Arch       string `protobuf:"bytes,8,opt,name=arch,proto3" json:"arch,omitempty"`
}

func (x *Basic) Reset() {
	*x = Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic) ProtoMessage() {}

func (x *Basic) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic.ProtoReflect.Descriptor instead.
func (*Basic) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{1}
}

func (x *Basic) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Basic) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Basic) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *Basic) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *Basic) GetDirty() bool {
	if x != nil {
		return x.Dirty
	}
	return false
}

func (x *Basic) GetCompiledAt() int64 {
	if x != nil {
		return x.CompiledAt
	}
	return 0
}

func (x *Basic) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Basic) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string             `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RawId         uint32             `protobuf:"varint,2,opt,name=raw_id,json=rawId,proto3" json:"raw_id,omitempty"`
	Type          string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Note          string             `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	PipelineId    string             `protobuf:"bytes,5,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	GroupName     string             `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Target        string             `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	IsAlive       bool               `protobuf:"varint,8,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	IsPrivilege   bool               `protobuf:"varint,9,opt,name=is_privilege,json=isPrivilege,proto3" json:"is_privilege,omitempty"`
	IsInitialized bool               `protobuf:"varint,10,opt,name=is_initialized,json=isInitialized,proto3" json:"is_initialized,omitempty"`
	LastCheckin   int64              `protobuf:"varint,11,opt,name=last_checkin,json=lastCheckin,proto3" json:"last_checkin,omitempty"`
	Tasks         *Tasks             `protobuf:"bytes,12,opt,name=tasks,proto3" json:"tasks,omitempty"`
	Os            *implantpb.Os      `protobuf:"bytes,20,opt,name=os,proto3" json:"os,omitempty"`
	Process       *implantpb.Process `protobuf:"bytes,21,opt,name=process,proto3" json:"process,omitempty"`
	Timer         *implantpb.Timer   `protobuf:"bytes,22,opt,name=timer,proto3" json:"timer,omitempty"`
	Modules       []string           `protobuf:"bytes,15,rep,name=modules,proto3" json:"modules,omitempty"`
	Addons        []*implantpb.Addon `protobuf:"bytes,16,rep,name=addons,proto3" json:"addons,omitempty"`
	Argue         map[string]string  `protobuf:"bytes,17,rep,name=argue,proto3" json:"argue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data          map[string]string  `protobuf:"bytes,18,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Loot          map[string]string  `protobuf:"bytes,19,rep,name=loot,proto3" json:"loot,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{2}
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Session) GetRawId() uint32 {
	if x != nil {
		return x.RawId
	}
	return 0
}

func (x *Session) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Session) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Session) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *Session) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Session) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Session) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *Session) GetIsPrivilege() bool {
	if x != nil {
		return x.IsPrivilege
	}
	return false
}

func (x *Session) GetIsInitialized() bool {
	if x != nil {
		return x.IsInitialized
	}
	return false
}

func (x *Session) GetLastCheckin() int64 {
	if x != nil {
		return x.LastCheckin
	}
	return 0
}

func (x *Session) GetTasks() *Tasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Session) GetOs() *implantpb.Os {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *Session) GetProcess() *implantpb.Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Session) GetTimer() *implantpb.Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *Session) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Session) GetAddons() []*implantpb.Addon {
	if x != nil {
		return x.Addons
	}
	return nil
}

func (x *Session) GetArgue() map[string]string {
	if x != nil {
		return x.Argue
	}
	return nil
}

func (x *Session) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Session) GetLoot() map[string]string {
	if x != nil {
		return x.Loot
	}
	return nil
}

type SessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	All       bool   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
}

func (x *SessionRequest) Reset() {
	*x = SessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRequest) ProtoMessage() {}

func (x *SessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRequest.ProtoReflect.Descriptor instead.
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{3}
}

func (x *SessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type TaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	All       bool   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{4}
}

func (x *TaskRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TaskRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type SessionLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SessionLog) Reset() {
	*x = SessionLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionLog) ProtoMessage() {}

func (x *SessionLog) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionLog.ProtoReflect.Descriptor instead.
func (*SessionLog) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{5}
}

func (x *SessionLog) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionLog) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type BasicUpdateSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Op        string `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Arg       string `protobuf:"bytes,3,opt,name=arg,proto3" json:"arg,omitempty"`
}

func (x *BasicUpdateSession) Reset() {
	*x = BasicUpdateSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicUpdateSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicUpdateSession) ProtoMessage() {}

func (x *BasicUpdateSession) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicUpdateSession.ProtoReflect.Descriptor instead.
func (*BasicUpdateSession) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{6}
}

func (x *BasicUpdateSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BasicUpdateSession) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *BasicUpdateSession) GetArg() string {
	if x != nil {
		return x.Arg
	}
	return ""
}

type Sessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Sessions) Reset() {
	*x = Sessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sessions) ProtoMessage() {}

func (x *Sessions) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sessions.ProtoReflect.Descriptor instead.
func (*Sessions) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{7}
}

func (x *Sessions) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type SpiteCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SpiteCacheItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SpiteCache) Reset() {
	*x = SpiteCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiteCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiteCache) ProtoMessage() {}

func (x *SpiteCache) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiteCache.ProtoReflect.Descriptor instead.
func (*SpiteCache) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{8}
}

func (x *SpiteCache) GetItems() []*SpiteCacheItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type SpiteCacheItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      int32            `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Id         string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Spite      *implantpb.Spite `protobuf:"bytes,3,opt,name=spite,proto3" json:"spite,omitempty"`
	Expiration int64            `protobuf:"varint,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *SpiteCacheItem) Reset() {
	*x = SpiteCacheItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiteCacheItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiteCacheItem) ProtoMessage() {}

func (x *SpiteCacheItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiteCacheItem.ProtoReflect.Descriptor instead.
func (*SpiteCacheItem) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{9}
}

func (x *SpiteCacheItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SpiteCacheItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpiteCacheItem) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

func (x *SpiteCacheItem) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pipeline *Pipeline              `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Contents map[string]*WebContent `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{10}
}

func (x *Job) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

func (x *Job) GetContents() map[string]*WebContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type Jobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job []*Job `protobuf:"bytes,1,rep,name=job,proto3" json:"job,omitempty"`
}

func (x *Jobs) Reset() {
	*x = Jobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jobs) ProtoMessage() {}

func (x *Jobs) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jobs.ProtoReflect.Descriptor instead.
func (*Jobs) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{11}
}

func (x *Jobs) GetJob() []*Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ctrl string `protobuf:"bytes,2,opt,name=ctrl,proto3" json:"ctrl,omitempty"`
	Job  *Job   `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobCtrl) Reset() {
	*x = JobCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCtrl) ProtoMessage() {}

func (x *JobCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCtrl.ProtoReflect.Descriptor instead.
func (*JobCtrl) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{12}
}

func (x *JobCtrl) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobCtrl) GetCtrl() string {
	if x != nil {
		return x.Ctrl
	}
	return ""
}

func (x *JobCtrl) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Ctrl       string `protobuf:"bytes,2,opt,name=ctrl,proto3" json:"ctrl,omitempty"`
	Status     int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Error      string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Job        *Job   `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{13}
}

func (x *JobStatus) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *JobStatus) GetCtrl() string {
	if x != nil {
		return x.Ctrl
	}
	return ""
}

func (x *JobStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *JobStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *JobStatus) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type Listener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr      string     `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Active    bool       `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Pipelines *Pipelines `protobuf:"bytes,4,opt,name=pipelines,proto3" json:"pipelines,omitempty"`
}

func (x *Listener) Reset() {
	*x = Listener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{14}
}

func (x *Listener) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Listener) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Listener) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Listener) GetPipelines() *Pipelines {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

type Listeners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listeners []*Listener `protobuf:"bytes,1,rep,name=listeners,proto3" json:"listeners,omitempty"`
}

func (x *Listeners) Reset() {
	*x = Listeners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listeners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listeners) ProtoMessage() {}

func (x *Listeners) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listeners.ProtoReflect.Descriptor instead.
func (*Listeners) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{15}
}

func (x *Listeners) GetListeners() []*Listener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Online bool   `protobuf:"varint,3,opt,name=Online,proto3" json:"Online,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{16}
}

func (x *Client) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Client) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Client) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Client) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Clients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *Clients) Reset() {
	*x = Clients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clients) ProtoMessage() {}

func (x *Clients) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clients.ProtoReflect.Descriptor instead.
func (*Clients) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{17}
}

func (x *Clients) GetClients() []*Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Op      string           `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Message []byte           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Err     string           `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"` // Can't trigger normal gRPC error
	Callee  string           `protobuf:"bytes,7,opt,name=callee,proto3" json:"callee,omitempty"`
	Session *Session         `protobuf:"bytes,10,opt,name=session,proto3" json:"session,omitempty"`
	Job     *Job             `protobuf:"bytes,11,opt,name=job,proto3" json:"job,omitempty"`
	Client  *Client          `protobuf:"bytes,12,opt,name=client,proto3" json:"client,omitempty"`
	Task    *Task            `protobuf:"bytes,13,opt,name=task,proto3" json:"task,omitempty"`
	Spite   *implantpb.Spite `protobuf:"bytes,14,opt,name=spite,proto3" json:"spite,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{18}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Event) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Event) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *Event) GetCallee() string {
	if x != nil {
		return x.Callee
	}
	return ""
}

func (x *Event) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *Event) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Event) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Event) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Event) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

type On struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType   string `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventOp     string `protobuf:"bytes,3,opt,name=event_op,json=eventOp,proto3" json:"event_op,omitempty"`
	MessageName string `protobuf:"bytes,4,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
	SessionId   string `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TaskId      string `protobuf:"bytes,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	PipelineId  string `protobuf:"bytes,7,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	ListenerId  string `protobuf:"bytes,8,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
}

func (x *On) Reset() {
	*x = On{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *On) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*On) ProtoMessage() {}

func (x *On) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use On.ProtoReflect.Descriptor instead.
func (*On) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{19}
}

func (x *On) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *On) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *On) GetEventOp() string {
	if x != nil {
		return x.EventOp
	}
	return ""
}

func (x *On) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

func (x *On) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *On) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *On) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *On) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{20}
}

func (x *LoginReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LoginReq) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *LoginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certs      []byte `protobuf:"bytes,1,opt,name=certs,proto3" json:"certs,omitempty"`
	PrivateKey []byte `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Ca         []byte `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{21}
}

func (x *RegisterResp) GetCerts() []byte {
	if x != nil {
		return x.Certs
	}
	return nil
}

func (x *RegisterResp) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *RegisterResp) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

type Sync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *Sync) Reset() {
	*x = Sync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sync) ProtoMessage() {}

func (x *Sync) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sync.ProtoReflect.Descriptor instead.
func (*Sync) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{22}
}

func (x *Sync) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type SyncResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SyncResp) Reset() {
	*x = SyncResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResp) ProtoMessage() {}

func (x *SyncResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResp.ProtoReflect.Descriptor instead.
func (*SyncResp) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{23}
}

func (x *SyncResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SyncResp) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type TaskContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task    *Task            `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Session *Session         `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Spite   *implantpb.Spite `protobuf:"bytes,3,opt,name=spite,proto3" json:"spite,omitempty"`
}

func (x *TaskContext) Reset() {
	*x = TaskContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskContext) ProtoMessage() {}

func (x *TaskContext) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskContext.ProtoReflect.Descriptor instead.
func (*TaskContext) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{24}
}

func (x *TaskContext) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskContext) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *TaskContext) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

type TaskContexts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task    *Task              `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Session *Session           `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Spites  []*implantpb.Spite `protobuf:"bytes,3,rep,name=spites,proto3" json:"spites,omitempty"`
}

func (x *TaskContexts) Reset() {
	*x = TaskContexts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskContexts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskContexts) ProtoMessage() {}

func (x *TaskContexts) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskContexts.ProtoReflect.Descriptor instead.
func (*TaskContexts) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{25}
}

func (x *TaskContexts) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskContexts) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *TaskContexts) GetSpites() []*implantpb.Spite {
	if x != nil {
		return x.Spites
	}
	return nil
}

type TasksContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*TaskContext `protobuf:"bytes,1,rep,name=contexts,proto3" json:"contexts,omitempty"`
}

func (x *TasksContext) Reset() {
	*x = TasksContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksContext) ProtoMessage() {}

func (x *TasksContext) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksContext.ProtoReflect.Descriptor instead.
func (*TasksContext) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{26}
}

func (x *TasksContext) GetContexts() []*TaskContext {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SessionId   string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Status      int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Cur         int32  `protobuf:"varint,5,opt,name=cur,proto3" json:"cur,omitempty"`
	Total       int32  `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	Error       string `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Need        int32  `protobuf:"varint,8,opt,name=need,proto3" json:"need,omitempty"`
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Callby      string `protobuf:"bytes,10,opt,name=callby,proto3" json:"callby,omitempty"`
	Finished    bool   `protobuf:"varint,11,opt,name=finished,proto3" json:"finished,omitempty"`
	Timeout     bool   `protobuf:"varint,12,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{27}
}

func (x *Task) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Task) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Task) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *Task) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Task) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Task) GetNeed() int32 {
	if x != nil {
		return x.Need
	}
	return 0
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetCallby() string {
	if x != nil {
		return x.Callby
	}
	return ""
}

func (x *Task) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *Task) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

type Tasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *Tasks) Reset() {
	*x = Tasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tasks) ProtoMessage() {}

func (x *Tasks) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tasks.ProtoReflect.Descriptor instead.
func (*Tasks) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{28}
}

func (x *Tasks) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TaskDescs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*TaskDesc `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskDescs) Reset() {
	*x = TaskDescs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDescs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDescs) ProtoMessage() {}

func (x *TaskDescs) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDescs.ProtoReflect.Descriptor instead.
func (*TaskDescs) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{29}
}

func (x *TaskDescs) GetTasks() []*TaskDesc {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Local  string `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`                 // client
	TempId string `protobuf:"bytes,4,opt,name=temp_id,json=tempId,proto3" json:"temp_id,omitempty"` // server
	Remote string `protobuf:"bytes,5,opt,name=remote,proto3" json:"remote,omitempty"`               // implant
	Op     string `protobuf:"bytes,6,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{30}
}

func (x *File) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *File) GetTempId() string {
	if x != nil {
		return x.TempId
	}
	return ""
}

func (x *File) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *File) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type Files struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *Files) Reset() {
	*x = Files{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Files) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Files) ProtoMessage() {}

func (x *Files) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Files.ProtoReflect.Descriptor instead.
func (*Files) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{31}
}

func (x *Files) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type TaskDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Cur         int32  `protobuf:"varint,2,opt,name=cur,proto3" json:"cur,omitempty"`
	Total       int32  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskDesc) Reset() {
	*x = TaskDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDesc) ProtoMessage() {}

func (x *TaskDesc) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDesc.ProtoReflect.Descriptor instead.
func (*TaskDesc) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{32}
}

func (x *TaskDesc) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskDesc) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *TaskDesc) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TaskDesc) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskDesc) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskDesc) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Plugins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins []*Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *Plugins) Reset() {
	*x = Plugins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugins) ProtoMessage() {}

func (x *Plugins) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugins.ProtoReflect.Descriptor instead.
func (*Plugins) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{33}
}

func (x *Plugins) GetPlugins() []*Plugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{34}
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type EXE2Shellcode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bin    []byte `protobuf:"bytes,1,opt,name=bin,proto3" json:"bin,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // donut
	Arch   string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"` // x86 or x64
	Params string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *EXE2Shellcode) Reset() {
	*x = EXE2Shellcode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EXE2Shellcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXE2Shellcode) ProtoMessage() {}

func (x *EXE2Shellcode) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXE2Shellcode.ProtoReflect.Descriptor instead.
func (*EXE2Shellcode) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{35}
}

func (x *EXE2Shellcode) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

func (x *EXE2Shellcode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EXE2Shellcode) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *EXE2Shellcode) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type DLL2Shellcode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bin        []byte `protobuf:"bytes,1,opt,name=bin,proto3" json:"bin,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // srdi or donut
	Arch       string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"` // x86 or x64
	Params     string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	Entrypoint string `protobuf:"bytes,5,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
}

func (x *DLL2Shellcode) Reset() {
	*x = DLL2Shellcode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DLL2Shellcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLL2Shellcode) ProtoMessage() {}

func (x *DLL2Shellcode) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLL2Shellcode.ProtoReflect.Descriptor instead.
func (*DLL2Shellcode) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{36}
}

func (x *DLL2Shellcode) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

func (x *DLL2Shellcode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DLL2Shellcode) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *DLL2Shellcode) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *DLL2Shellcode) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

type ShellcodeEncode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shellcode  []byte `protobuf:"bytes,1,opt,name=shellcode,proto3" json:"shellcode,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // sgn
	Arch       string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"` // x86 or x64
	Iterations int32  `protobuf:"varint,4,opt,name=iterations,proto3" json:"iterations,omitempty"`
}

func (x *ShellcodeEncode) Reset() {
	*x = ShellcodeEncode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellcodeEncode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellcodeEncode) ProtoMessage() {}

func (x *ShellcodeEncode) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellcodeEncode.ProtoReflect.Descriptor instead.
func (*ShellcodeEncode) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{37}
}

func (x *ShellcodeEncode) GetShellcode() []byte {
	if x != nil {
		return x.Shellcode
	}
	return nil
}

func (x *ShellcodeEncode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShellcodeEncode) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *ShellcodeEncode) GetIterations() int32 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

type Bin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bin []byte `protobuf:"bytes,1,opt,name=Bin,proto3" json:"Bin,omitempty"`
}

func (x *Bin) Reset() {
	*x = Bin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bin) ProtoMessage() {}

func (x *Bin) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bin.ProtoReflect.Descriptor instead.
func (*Bin) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{38}
}

func (x *Bin) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

type Builder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bin          []byte `protobuf:"bytes,1,opt,name=bin,proto3" json:"bin,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Stage        string `protobuf:"bytes,4,opt,name=stage,proto3" json:"stage,omitempty"`
	Target       string `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	Arch         string `protobuf:"bytes,6,opt,name=arch,proto3" json:"arch,omitempty"`
	Platform     string `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	Id           uint32 `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	FunctionName string `protobuf:"bytes,9,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	UserDataPath string `protobuf:"bytes,10,opt,name=user_data_path,json=userDataPath,proto3" json:"user_data_path,omitempty"`
	Modules      string `protobuf:"bytes,11,opt,name=modules,proto3" json:"modules,omitempty"`
}

func (x *Builder) Reset() {
	*x = Builder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Builder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Builder) ProtoMessage() {}

func (x *Builder) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Builder.ProtoReflect.Descriptor instead.
func (*Builder) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{39}
}

func (x *Builder) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

func (x *Builder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Builder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Builder) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *Builder) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Builder) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Builder) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Builder) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Builder) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *Builder) GetUserDataPath() string {
	if x != nil {
		return x.UserDataPath
	}
	return ""
}

func (x *Builder) GetModules() string {
	if x != nil {
		return x.Modules
	}
	return ""
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target     string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Proxy      string `protobuf:"bytes,4,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Obfuscate  string `protobuf:"bytes,5,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
	Modules    string `protobuf:"bytes,6,opt,name=modules,proto3" json:"modules,omitempty"`
	Ca         string `protobuf:"bytes,7,opt,name=ca,proto3" json:"ca,omitempty"`
	Params     string `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	PipelineId string `protobuf:"bytes,9,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{40}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Profile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Profile) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

func (x *Profile) GetObfuscate() string {
	if x != nil {
		return x.Obfuscate
	}
	return ""
}

func (x *Profile) GetModules() string {
	if x != nil {
		return x.Modules
	}
	return ""
}

func (x *Profile) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *Profile) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *Profile) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type Profiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *Profiles) Reset() {
	*x = Profiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles) ProtoMessage() {}

func (x *Profiles) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles.ProtoReflect.Descriptor instead.
func (*Profiles) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{41}
}

func (x *Profiles) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Generate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProfileName string            `protobuf:"bytes,2,opt,name=profileName,proto3" json:"profileName,omitempty"`
	Url         string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Stager      string            `protobuf:"bytes,4,opt,name=stager,proto3" json:"stager,omitempty"`
	Target      string            `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	Platform    string            `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	Type        string            `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Modules     []string          `protobuf:"bytes,8,rep,name=modules,proto3" json:"modules,omitempty"`
	Ca          string            `protobuf:"bytes,9,opt,name=ca,proto3" json:"ca,omitempty"`
	Params      map[string]string `protobuf:"bytes,10,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Feature     string            `protobuf:"bytes,11,opt,name=feature,proto3" json:"feature,omitempty"`
	Srdi        bool              `protobuf:"varint,12,opt,name=srdi,proto3" json:"srdi,omitempty"`
}

func (x *Generate) Reset() {
	*x = Generate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Generate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generate) ProtoMessage() {}

func (x *Generate) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generate.ProtoReflect.Descriptor instead.
func (*Generate) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{42}
}

func (x *Generate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Generate) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *Generate) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Generate) GetStager() string {
	if x != nil {
		return x.Stager
	}
	return ""
}

func (x *Generate) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Generate) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Generate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Generate) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Generate) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *Generate) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Generate) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *Generate) GetSrdi() bool {
	if x != nil {
		return x.Srdi
	}
	return false
}

type Builders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builders []*Builder `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
}

func (x *Builders) Reset() {
	*x = Builders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Builders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Builders) ProtoMessage() {}

func (x *Builders) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Builders.ProtoReflect.Descriptor instead.
func (*Builders) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{43}
}

func (x *Builders) GetBuilders() []*Builder {
	if x != nil {
		return x.Builders
	}
	return nil
}

type RegisterSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PipelineId   string              `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Target       string              `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	RawId        uint32              `protobuf:"varint,5,opt,name=raw_id,json=rawId,proto3" json:"raw_id,omitempty"`
	Type         string              `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	RegisterData *implantpb.Register `protobuf:"bytes,7,opt,name=register_data,json=registerData,proto3" json:"register_data,omitempty"`
}

func (x *RegisterSession) Reset() {
	*x = RegisterSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSession) ProtoMessage() {}

func (x *RegisterSession) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSession.ProtoReflect.Descriptor instead.
func (*RegisterSession) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{44}
}

func (x *RegisterSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterSession) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *RegisterSession) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RegisterSession) GetRawId() uint32 {
	if x != nil {
		return x.RawId
	}
	return 0
}

func (x *RegisterSession) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RegisterSession) GetRegisterData() *implantpb.Register {
	if x != nil {
		return x.RegisterData
	}
	return nil
}

type RegisterListener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host      string     `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Name      string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Addr      string     `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Pipelines *Pipelines `protobuf:"bytes,5,opt,name=pipelines,proto3" json:"pipelines,omitempty"`
}

func (x *RegisterListener) Reset() {
	*x = RegisterListener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterListener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterListener) ProtoMessage() {}

func (x *RegisterListener) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterListener.ProtoReflect.Descriptor instead.
func (*RegisterListener) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{45}
}

func (x *RegisterListener) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterListener) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RegisterListener) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterListener) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RegisterListener) GetPipelines() *Pipelines {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

type SpiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string           `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Session    *Session         `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Task       *Task            `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Spite      *implantpb.Spite `protobuf:"bytes,4,opt,name=spite,proto3" json:"spite,omitempty"`
}

func (x *SpiteRequest) Reset() {
	*x = SpiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiteRequest) ProtoMessage() {}

func (x *SpiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiteRequest.ProtoReflect.Descriptor instead.
func (*SpiteRequest) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{46}
}

func (x *SpiteRequest) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *SpiteRequest) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *SpiteRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *SpiteRequest) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

type SpiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string           `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	SessionId  string           `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TaskId     uint32           `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Spite      *implantpb.Spite `protobuf:"bytes,4,opt,name=spite,proto3" json:"spite,omitempty"`
}

func (x *SpiteResponse) Reset() {
	*x = SpiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiteResponse) ProtoMessage() {}

func (x *SpiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiteResponse.ProtoReflect.Descriptor instead.
func (*SpiteResponse) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{47}
}

func (x *SpiteResponse) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *SpiteResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SpiteResponse) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SpiteResponse) GetSpite() *implantpb.Spite {
	if x != nil {
		return x.Spite
	}
	return nil
}

type Pipelines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipelines []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
}

func (x *Pipelines) Reset() {
	*x = Pipelines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipelines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipelines) ProtoMessage() {}

func (x *Pipelines) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipelines.ProtoReflect.Descriptor instead.
func (*Pipelines) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{48}
}

func (x *Pipelines) GetPipelines() []*Pipeline {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable     bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ListenerId string `protobuf:"bytes,3,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Parser     string `protobuf:"bytes,4,opt,name=parser,proto3" json:"parser,omitempty"`
	// Types that are assignable to Body:
	//	*Pipeline_Tcp
	//	*Pipeline_Bind
	//	*Pipeline_Web
	Body       isPipeline_Body `protobuf_oneof:"body"`
	Tls        *TLS            `protobuf:"bytes,70,opt,name=tls,proto3" json:"tls,omitempty"`
	Encryption *Encryption     `protobuf:"bytes,80,opt,name=encryption,proto3" json:"encryption,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{49}
}

func (x *Pipeline) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *Pipeline) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (m *Pipeline) GetBody() isPipeline_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Pipeline) GetTcp() *TCPPipeline {
	if x, ok := x.GetBody().(*Pipeline_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (x *Pipeline) GetBind() *BindPipeline {
	if x, ok := x.GetBody().(*Pipeline_Bind); ok {
		return x.Bind
	}
	return nil
}

func (x *Pipeline) GetWeb() *Website {
	if x, ok := x.GetBody().(*Pipeline_Web); ok {
		return x.Web
	}
	return nil
}

func (x *Pipeline) GetTls() *TLS {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *Pipeline) GetEncryption() *Encryption {
	if x != nil {
		return x.Encryption
	}
	return nil
}

type isPipeline_Body interface {
	isPipeline_Body()
}

type Pipeline_Tcp struct {
	Tcp *TCPPipeline `protobuf:"bytes,10,opt,name=tcp,proto3,oneof"`
}

type Pipeline_Bind struct {
	Bind *BindPipeline `protobuf:"bytes,11,opt,name=bind,proto3,oneof"`
}

type Pipeline_Web struct {
	Web *Website `protobuf:"bytes,20,opt,name=web,proto3,oneof"`
}

func (*Pipeline_Tcp) isPipeline_Body() {}

func (*Pipeline_Bind) isPipeline_Body() {}

func (*Pipeline_Web) isPipeline_Body() {}

type CtrlPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerId string `protobuf:"bytes,1,opt,name=listener_id,json=listenerId,proto3" json:"listener_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CtrlPipeline) Reset() {
	*x = CtrlPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtrlPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtrlPipeline) ProtoMessage() {}

func (x *CtrlPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtrlPipeline.ProtoReflect.Descriptor instead.
func (*CtrlPipeline) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{50}
}

func (x *CtrlPipeline) GetListenerId() string {
	if x != nil {
		return x.ListenerId
	}
	return ""
}

func (x *CtrlPipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TLS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert   string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Enable bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *TLS) Reset() {
	*x = TLS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS.ProtoReflect.Descriptor instead.
func (*TLS) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{51}
}

func (x *TLS) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *TLS) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TLS) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type Encryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Encryption) Reset() {
	*x = Encryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Encryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Encryption) ProtoMessage() {}

func (x *Encryption) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Encryption.ProtoReflect.Descriptor instead.
func (*Encryption) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{52}
}

func (x *Encryption) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Encryption) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Encryption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BindPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindPipeline) Reset() {
	*x = BindPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPipeline) ProtoMessage() {}

func (x *BindPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPipeline.ProtoReflect.Descriptor instead.
func (*BindPipeline) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{53}
}

type TCPPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *TCPPipeline) Reset() {
	*x = TCPPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPPipeline) ProtoMessage() {}

func (x *TCPPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPPipeline.ProtoReflect.Descriptor instead.
func (*TCPPipeline) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{54}
}

func (x *TCPPipeline) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TCPPipeline) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type WebContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WebsiteID   string `protobuf:"bytes,3,opt,name=websiteID,proto3" json:"websiteID,omitempty"`
	Path        string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	ContentType string `protobuf:"bytes,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Size        uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Parser      string `protobuf:"bytes,7,opt,name=parser,proto3" json:"parser,omitempty"`
	Type        string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Content     []byte `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *WebContent) Reset() {
	*x = WebContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebContent) ProtoMessage() {}

func (x *WebContent) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebContent.ProtoReflect.Descriptor instead.
func (*WebContent) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{55}
}

func (x *WebContent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WebContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebContent) GetWebsiteID() string {
	if x != nil {
		return x.WebsiteID
	}
	return ""
}

func (x *WebContent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebContent) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *WebContent) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WebContent) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *WebContent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WebContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type WebsiteAddContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Contents map[string]*WebContent `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WebsiteAddContent) Reset() {
	*x = WebsiteAddContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteAddContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteAddContent) ProtoMessage() {}

func (x *WebsiteAddContent) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteAddContent.ProtoReflect.Descriptor instead.
func (*WebsiteAddContent) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{56}
}

func (x *WebsiteAddContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebsiteAddContent) GetContents() map[string]*WebContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type WebsiteRemoveContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Paths []string `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *WebsiteRemoveContent) Reset() {
	*x = WebsiteRemoveContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteRemoveContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteRemoveContent) ProtoMessage() {}

func (x *WebsiteRemoveContent) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteRemoveContent.ProtoReflect.Descriptor instead.
func (*WebsiteRemoveContent) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{57}
}

func (x *WebsiteRemoveContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebsiteRemoveContent) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Website struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Port     uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Root     string                 `protobuf:"bytes,4,opt,name=root,proto3" json:"root,omitempty"`
	Contents map[string]*WebContent `protobuf:"bytes,6,rep,name=contents,proto3" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Website) Reset() {
	*x = Website{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Website) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Website) ProtoMessage() {}

func (x *Website) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Website.ProtoReflect.Descriptor instead.
func (*Website) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{58}
}

func (x *Website) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Website) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Website) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *Website) GetContents() map[string]*WebContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type WebsiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *WebsiteResponse) Reset() {
	*x = WebsiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteResponse) ProtoMessage() {}

func (x *WebsiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteResponse.ProtoReflect.Descriptor instead.
func (*WebsiteResponse) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{59}
}

func (x *WebsiteResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Websites struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Websites []*Website `protobuf:"bytes,1,rep,name=websites,proto3" json:"websites,omitempty"`
}

func (x *Websites) Reset() {
	*x = Websites{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Websites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Websites) ProtoMessage() {}

func (x *Websites) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Websites.ProtoReflect.Descriptor instead.
func (*Websites) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{60}
}

func (x *Websites) GetWebsites() []*Website {
	if x != nil {
		return x.Websites
	}
	return nil
}

type Polling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SessionId string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Interval  uint64   `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
	Tasks     []uint32 `protobuf:"varint,4,rep,packed,name=tasks,proto3" json:"tasks,omitempty"`
	Force     bool     `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *Polling) Reset() {
	*x = Polling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_clientpb_client_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polling) ProtoMessage() {}

func (x *Polling) ProtoReflect() protoreflect.Message {
	mi := &file_client_clientpb_client_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polling.ProtoReflect.Descriptor instead.
func (*Polling) Descriptor() ([]byte, []int) {
	return file_client_clientpb_client_proto_rawDescGZIP(), []int{61}
}

func (x *Polling) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Polling) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Polling) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Polling) GetTasks() []uint32 {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Polling) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

var File_client_clientpb_client_proto protoreflect.FileDescriptor

var file_client_clientpb_client_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x1a, 0x1f, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x69, 0x6d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x69, 0x6d, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x72, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x69, 0x72, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68,
	0x22, 0xe5, 0x06, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x61, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x77,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x1c, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x4f, 0x73, 0x52, 0x02, 0x6f, 0x73, 0x12,
	0x2b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x72, 0x67, 0x75, 0x65, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x72, 0x67, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x6c,
	0x6f, 0x6f, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x74, 0x1a, 0x38, 0x0a, 0x0a,
	0x41, 0x72, 0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x37, 0x0a, 0x09, 0x4c, 0x6f, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x3e, 0x0a, 0x0b, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x41, 0x0a, 0x0a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x55,
	0x0a, 0x12, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x72, 0x67, 0x22, 0x39, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x70, 0x69, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x2e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7e,
	0x0a, 0x0e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5,
	0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x51, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1f,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22,
	0x4e, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x74,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x74, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22,
	0x8f, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x74,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x22, 0x79, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x52, 0x09, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x06, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb3, 0x02, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x12, 0x2b,
	0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x03, 0x6a,
	0x6f, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x28, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x70,
	0x69, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73, 0x70, 0x69,
	0x74, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x02, 0x4f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x46, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x63, 0x61, 0x22,
	0x1f, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x54,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x2b,
	0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x73,
	0x70, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73, 0x70,
	0x69, 0x74, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x53, 0x70, 0x69, 0x74, 0x65, 0x52, 0x06, 0x73, 0x70, 0x69, 0x74, 0x65, 0x73, 0x22,
	0x41, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x31, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x65, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x2d, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0x35, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x73, 0x12, 0x28, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63,
	0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x70, 0x22, 0x2d, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x35, 0x0a, 0x07, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x61,
	0x0a, 0x0d, 0x45, 0x58, 0x45, 0x32, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x44, 0x4c, 0x4c, 0x32, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x62, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x0f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f,
	0x64, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x65, 0x6c,
	0x6c, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x68, 0x65,
	0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17,
	0x0a, 0x03, 0x42, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x42, 0x69, 0x6e, 0x22, 0x96, 0x02, 0x0a, 0x07, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x62, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x22, 0xe0, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xfd,
	0x02, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x61, 0x12, 0x36, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x72, 0x64, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x72, 0x64, 0x69, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39,
	0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x09, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xa8, 0x01,
	0x0a, 0x0c, 0x53, 0x70, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x12, 0x26, 0x0a, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x69, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x53, 0x70, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53,
	0x70, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73, 0x70, 0x69, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x09, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x09, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x08, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x03,
	0x74, 0x63, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x43, 0x50, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x48, 0x00, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x77, 0x65, 0x62, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x03, 0x77, 0x65, 0x62, 0x12, 0x1f, 0x0a, 0x03,
	0x74, 0x6c, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x4c, 0x53, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x34, 0x0a,
	0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x43, 0x0a, 0x0c, 0x43,
	0x74, 0x72, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x43, 0x0a, 0x03, 0x54, 0x4c, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x22, 0x35, 0x0a, 0x0b, 0x54, 0x43, 0x50, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x62,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc1, 0x01,
	0x0a, 0x11, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x51,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x40, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x51, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x21, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x08, 0x57, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x08, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_clientpb_client_proto_rawDescOnce sync.Once
	file_client_clientpb_client_proto_rawDescData = file_client_clientpb_client_proto_rawDesc
)

func file_client_clientpb_client_proto_rawDescGZIP() []byte {
	file_client_clientpb_client_proto_rawDescOnce.Do(func() {
		file_client_clientpb_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_clientpb_client_proto_rawDescData)
	})
	return file_client_clientpb_client_proto_rawDescData
}

var file_client_clientpb_client_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_client_clientpb_client_proto_goTypes = []interface{}{
	(*Empty)(nil),                // 0: clientpb.Empty
	(*Basic)(nil),                // 1: clientpb.Basic
	(*Session)(nil),              // 2: clientpb.Session
	(*SessionRequest)(nil),       // 3: clientpb.SessionRequest
	(*TaskRequest)(nil),          // 4: clientpb.TaskRequest
	(*SessionLog)(nil),           // 5: clientpb.SessionLog
	(*BasicUpdateSession)(nil),   // 6: clientpb.BasicUpdateSession
	(*Sessions)(nil),             // 7: clientpb.Sessions
	(*SpiteCache)(nil),           // 8: clientpb.SpiteCache
	(*SpiteCacheItem)(nil),       // 9: clientpb.SpiteCacheItem
	(*Job)(nil),                  // 10: clientpb.Job
	(*Jobs)(nil),                 // 11: clientpb.Jobs
	(*JobCtrl)(nil),              // 12: clientpb.JobCtrl
	(*JobStatus)(nil),            // 13: clientpb.JobStatus
	(*Listener)(nil),             // 14: clientpb.Listener
	(*Listeners)(nil),            // 15: clientpb.Listeners
	(*Client)(nil),               // 16: clientpb.Client
	(*Clients)(nil),              // 17: clientpb.Clients
	(*Event)(nil),                // 18: clientpb.Event
	(*On)(nil),                   // 19: clientpb.On
	(*LoginReq)(nil),             // 20: clientpb.LoginReq
	(*RegisterResp)(nil),         // 21: clientpb.RegisterResp
	(*Sync)(nil),                 // 22: clientpb.Sync
	(*SyncResp)(nil),             // 23: clientpb.SyncResp
	(*TaskContext)(nil),          // 24: clientpb.TaskContext
	(*TaskContexts)(nil),         // 25: clientpb.TaskContexts
	(*TasksContext)(nil),         // 26: clientpb.TasksContext
	(*Task)(nil),                 // 27: clientpb.Task
	(*Tasks)(nil),                // 28: clientpb.Tasks
	(*TaskDescs)(nil),            // 29: clientpb.TaskDescs
	(*File)(nil),                 // 30: clientpb.File
	(*Files)(nil),                // 31: clientpb.Files
	(*TaskDesc)(nil),             // 32: clientpb.TaskDesc
	(*Plugins)(nil),              // 33: clientpb.Plugins
	(*Plugin)(nil),               // 34: clientpb.Plugin
	(*EXE2Shellcode)(nil),        // 35: clientpb.EXE2Shellcode
	(*DLL2Shellcode)(nil),        // 36: clientpb.DLL2Shellcode
	(*ShellcodeEncode)(nil),      // 37: clientpb.ShellcodeEncode
	(*Bin)(nil),                  // 38: clientpb.Bin
	(*Builder)(nil),              // 39: clientpb.Builder
	(*Profile)(nil),              // 40: clientpb.Profile
	(*Profiles)(nil),             // 41: clientpb.Profiles
	(*Generate)(nil),             // 42: clientpb.Generate
	(*Builders)(nil),             // 43: clientpb.Builders
	(*RegisterSession)(nil),      // 44: clientpb.RegisterSession
	(*RegisterListener)(nil),     // 45: clientpb.RegisterListener
	(*SpiteRequest)(nil),         // 46: clientpb.SpiteRequest
	(*SpiteResponse)(nil),        // 47: clientpb.SpiteResponse
	(*Pipelines)(nil),            // 48: clientpb.Pipelines
	(*Pipeline)(nil),             // 49: clientpb.Pipeline
	(*CtrlPipeline)(nil),         // 50: clientpb.CtrlPipeline
	(*TLS)(nil),                  // 51: clientpb.TLS
	(*Encryption)(nil),           // 52: clientpb.Encryption
	(*BindPipeline)(nil),         // 53: clientpb.BindPipeline
	(*TCPPipeline)(nil),          // 54: clientpb.TCPPipeline
	(*WebContent)(nil),           // 55: clientpb.WebContent
	(*WebsiteAddContent)(nil),    // 56: clientpb.WebsiteAddContent
	(*WebsiteRemoveContent)(nil), // 57: clientpb.WebsiteRemoveContent
	(*Website)(nil),              // 58: clientpb.Website
	(*WebsiteResponse)(nil),      // 59: clientpb.WebsiteResponse
	(*Websites)(nil),             // 60: clientpb.Websites
	(*Polling)(nil),              // 61: clientpb.Polling
	nil,                          // 62: clientpb.Session.ArgueEntry
	nil,                          // 63: clientpb.Session.DataEntry
	nil,                          // 64: clientpb.Session.LootEntry
	nil,                          // 65: clientpb.Job.ContentsEntry
	nil,                          // 66: clientpb.Generate.ParamsEntry
	nil,                          // 67: clientpb.WebsiteAddContent.ContentsEntry
	nil,                          // 68: clientpb.Website.ContentsEntry
	(*implantpb.Os)(nil),         // 69: modulepb.Os
	(*implantpb.Process)(nil),    // 70: modulepb.Process
	(*implantpb.Timer)(nil),      // 71: modulepb.Timer
	(*implantpb.Addon)(nil),      // 72: modulepb.Addon
	(*implantpb.Spite)(nil),      // 73: implantpb.Spite
	(*implantpb.Register)(nil),   // 74: modulepb.Register
}
var file_client_clientpb_client_proto_depIdxs = []int32{
	28, // 0: clientpb.Session.tasks:type_name -> clientpb.Tasks
	69, // 1: clientpb.Session.os:type_name -> modulepb.Os
	70, // 2: clientpb.Session.process:type_name -> modulepb.Process
	71, // 3: clientpb.Session.timer:type_name -> modulepb.Timer
	72, // 4: clientpb.Session.addons:type_name -> modulepb.Addon
	62, // 5: clientpb.Session.argue:type_name -> clientpb.Session.ArgueEntry
	63, // 6: clientpb.Session.data:type_name -> clientpb.Session.DataEntry
	64, // 7: clientpb.Session.loot:type_name -> clientpb.Session.LootEntry
	2,  // 8: clientpb.Sessions.sessions:type_name -> clientpb.Session
	9,  // 9: clientpb.SpiteCache.items:type_name -> clientpb.SpiteCacheItem
	73, // 10: clientpb.SpiteCacheItem.spite:type_name -> implantpb.Spite
	49, // 11: clientpb.Job.pipeline:type_name -> clientpb.Pipeline
	65, // 12: clientpb.Job.contents:type_name -> clientpb.Job.ContentsEntry
	10, // 13: clientpb.Jobs.job:type_name -> clientpb.Job
	10, // 14: clientpb.JobCtrl.job:type_name -> clientpb.Job
	10, // 15: clientpb.JobStatus.job:type_name -> clientpb.Job
	48, // 16: clientpb.Listener.pipelines:type_name -> clientpb.Pipelines
	14, // 17: clientpb.Listeners.listeners:type_name -> clientpb.Listener
	16, // 18: clientpb.Clients.clients:type_name -> clientpb.Client
	2,  // 19: clientpb.Event.session:type_name -> clientpb.Session
	10, // 20: clientpb.Event.job:type_name -> clientpb.Job
	16, // 21: clientpb.Event.client:type_name -> clientpb.Client
	27, // 22: clientpb.Event.task:type_name -> clientpb.Task
	73, // 23: clientpb.Event.spite:type_name -> implantpb.Spite
	27, // 24: clientpb.TaskContext.task:type_name -> clientpb.Task
	2,  // 25: clientpb.TaskContext.session:type_name -> clientpb.Session
	73, // 26: clientpb.TaskContext.spite:type_name -> implantpb.Spite
	27, // 27: clientpb.TaskContexts.task:type_name -> clientpb.Task
	2,  // 28: clientpb.TaskContexts.session:type_name -> clientpb.Session
	73, // 29: clientpb.TaskContexts.spites:type_name -> implantpb.Spite
	24, // 30: clientpb.TasksContext.contexts:type_name -> clientpb.TaskContext
	27, // 31: clientpb.Tasks.tasks:type_name -> clientpb.Task
	32, // 32: clientpb.TaskDescs.tasks:type_name -> clientpb.TaskDesc
	30, // 33: clientpb.Files.files:type_name -> clientpb.File
	34, // 34: clientpb.Plugins.plugins:type_name -> clientpb.Plugin
	40, // 35: clientpb.Profiles.profiles:type_name -> clientpb.Profile
	66, // 36: clientpb.Generate.params:type_name -> clientpb.Generate.ParamsEntry
	39, // 37: clientpb.Builders.builders:type_name -> clientpb.Builder
	74, // 38: clientpb.RegisterSession.register_data:type_name -> modulepb.Register
	48, // 39: clientpb.RegisterListener.pipelines:type_name -> clientpb.Pipelines
	2,  // 40: clientpb.SpiteRequest.session:type_name -> clientpb.Session
	27, // 41: clientpb.SpiteRequest.task:type_name -> clientpb.Task
	73, // 42: clientpb.SpiteRequest.spite:type_name -> implantpb.Spite
	73, // 43: clientpb.SpiteResponse.spite:type_name -> implantpb.Spite
	49, // 44: clientpb.Pipelines.pipelines:type_name -> clientpb.Pipeline
	54, // 45: clientpb.Pipeline.tcp:type_name -> clientpb.TCPPipeline
	53, // 46: clientpb.Pipeline.bind:type_name -> clientpb.BindPipeline
	58, // 47: clientpb.Pipeline.web:type_name -> clientpb.Website
	51, // 48: clientpb.Pipeline.tls:type_name -> clientpb.TLS
	52, // 49: clientpb.Pipeline.encryption:type_name -> clientpb.Encryption
	67, // 50: clientpb.WebsiteAddContent.contents:type_name -> clientpb.WebsiteAddContent.ContentsEntry
	68, // 51: clientpb.Website.contents:type_name -> clientpb.Website.ContentsEntry
	58, // 52: clientpb.Websites.websites:type_name -> clientpb.Website
	55, // 53: clientpb.Job.ContentsEntry.value:type_name -> clientpb.WebContent
	55, // 54: clientpb.WebsiteAddContent.ContentsEntry.value:type_name -> clientpb.WebContent
	55, // 55: clientpb.Website.ContentsEntry.value:type_name -> clientpb.WebContent
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_client_clientpb_client_proto_init() }
func file_client_clientpb_client_proto_init() {
	if File_client_clientpb_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_clientpb_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicUpdateSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiteCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiteCacheItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listeners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*On); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskContexts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDescs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Files); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EXE2Shellcode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DLL2Shellcode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellcodeEncode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Builder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Generate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Builders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterListener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipelines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtrlPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Encryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteAddContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteRemoveContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Website); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Websites); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_clientpb_client_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_client_clientpb_client_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*Pipeline_Tcp)(nil),
		(*Pipeline_Bind)(nil),
		(*Pipeline_Web)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_clientpb_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_clientpb_client_proto_goTypes,
		DependencyIndexes: file_client_clientpb_client_proto_depIdxs,
		MessageInfos:      file_client_clientpb_client_proto_msgTypes,
	}.Build()
	File_client_clientpb_client_proto = out.File
	file_client_clientpb_client_proto_rawDesc = nil
	file_client_clientpb_client_proto_goTypes = nil
	file_client_clientpb_client_proto_depIdxs = nil
}
